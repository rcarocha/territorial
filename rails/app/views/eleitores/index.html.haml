%script{:src  => "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js",
           :type => "text/javascript"}
%script{:src  => "http://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js",
           :type => "text/javascript"}
%script{:src  => "https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js",
           :type => "text/javascript"}

%ol.breadcrumb
   %li.breadcrumb-item
      %a{:href => "/"} Home
   %li.breadcrumb-item.active
      %a{:href => "/eleitor"} Eleitor
   %li.breadcrumb-item.active=@subnivel_titulo


%h1 Eleitor

%p Análises eleitorais orientadas a eleitores.

/ %h3 Sequência de ações
/
/ %ol
/   %li Qual é a localização OU estado da federação (aparece marcado)
/   %li Zoom, aparecem mais lugares (detalhamento): e se aparecer município?
/   %li interface de pesquisa por município
/   %li Selecionar: tipo de eleição, ano (última) (botões)
/   %li Resultado da eleição: lista dos candidatos

%h2=@hierarquia_lugares

%h3=@subnivel_titulo

%p Selecione uma região abaixo para limitar o escopo de localização dos dados de votação.

- if @subnivel_loc != nil then
   - @subnivel_loc.each do |subloc|

      %a{:href => "?#{subloc.to_sym}=#{subloc.id}"}
         %button.btn.btn-outline-primary{:type => "button"}="#{subloc.nome}"
%p

- if @eleicao then

   %h2 Votos em Partidos
   %ul
      - if @eleicao.votos_legenda(@ano) == nil then
         %div.alert.alert-dismissible.alert-danger
            %button.close{ :type => "button",  :data-dismiss => "alert"}
            %strong Não há votos de legenda computados no CEPESP.io!

      - else
         %canvas{:id => "myChartPartidos", :width => "600", :height => "400"}

   %h2 Comparecimento na Eleição
   %canvas{:id => "myChart", :width => "600", :height => "400"}
   %h5 Total: #{number_with_delimiter(@eleicao.resultado(@ano).qtd_comparecimento)}
   /%h5 Abstenções: #{@eleicao.resultado(@ano).qtd_abstencoes}
   /.progress
   /   .progress-bar.progress-bar-striped.bg-success{:role => "progressbar", :style => "width: " + (100*(@eleicao.resultado(@ano).qtd_abstencoes).to_i.to_f/(@eleicao.resultado(@ano).qtd_comparecimento).to_i).round(1).to_s + "%", "aria-valuenow".to_sym => "30", "aria-valuemin".to_sym =>"0", "aria-valuemax".to_sym => "100"}
   /%h5 Brancos:  #{@eleicao.resultado(@ano).qt_votos_brancos}
   /.progress
   /   .progress-bar.progress-bar-striped.bg-warning{:role => "progressbar", :style => "width: " + (100*(@eleicao.resultado(@ano).qt_votos_brancos).to_i.to_f/(@eleicao.resultado(@ano).qtd_comparecimento).to_i).round(1).to_s + "%", "aria-valuenow".to_sym => "30", "aria-valuemin".to_sym =>"0", "aria-valuemax".to_sym => "100"}
   /%h5 Nulos: #{@eleicao.resultado(@ano).qt_votos_nulos}
   /.progress
   /  .progress-bar.progress-bar-striped.bg-danger{:role => "progressbar", :style => "width: " + (100*(@eleicao.resultado(@ano).qt_votos_nulos).to_i.to_f/(@eleicao.resultado(@ano).qtd_comparecimento).to_i).round(1).to_s + "%", "aria-valuenow".to_sym => "30", "aria-valuemin".to_sym =>"0", "aria-valuemax".to_sym => "100"}

   %p

   %h2 Resultados por Candidato

   %table.table.table-striped.table-hover.table-bordered{:id => 'table_id'}
      %thead.thead-dark
         %tr
            %th Título
            %th Candidato
            %th Partido
            %th Número
            %th Coligação
            %th Domicílio
            %th Votação (%Válidos/%Local/%Geral)
            %th Status
            %th Resultado

      %tbody
         - @eleicao.candidatos(@ano).each do |chave, dados|
            %tr
               %td=chave
               %td
                  %a{:href => "/charts/#{dados[0].numero_candidato}?data=#{dados[0].to_json}&local=#{@local}&escopo=#{@escopo}", :target => "_blank"}
                     #{maiusculas_iniciais(dados[0].nome_urna_candidato)}
               %td=dados[0].sigla_partido
               %td
                  %a{:href => "/charts/#{dados[0].numero_candidato}", :target => "_blank"}
                     #{dados[0].numero_candidato}
               %td="#{@eleicao.legendas(@ano)[dados[0].numero_partido].numero_partidos} partidos"
               %td=dados[0].uf
               %td="#{number_with_delimiter(dados[0].qtde_votos)} votos (#{dados[0].percentual_votos_validos}/#{dados[0].percentual_votos_localizacao}/#{dados[0].percentual_votos_gerais})"
               %td=maiusculas_iniciais(dados[0].des_situacao_candidatura)
               %td=codigo_bd_para_humanos(dados[0].resultado_eleicao)

   :javascript
      var map = L.map('map').setView([-15.7253862,-47.9304935], 5);
      var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
      var osmAttrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';


       L.tileLayer(osmUrl, { maxZoom: 10, attribution: osmAttrib, id: 'mapbox.streets' }).addTo(map);
       var myStyle = { "color": "#ff7800", "weight": 3, "opacity": 0.85 };


       // StatesData esta sendo declardo dentro de app/assets/javascripts/analista/brasil_geo.js
       L.geoJSON(statesData, {style: myStyle}).addTo(map);
       // Retorna a cor de acordo com a densidade populacional
       function getColor(d) {
          return d > 1000 ? '#800026' :
                d > 500  ? '#BD0026' :
                d > 200  ? '#E31A1C' :
                d > 100  ? '#FC4E2A' :
                d > 50   ? '#FD8D3C' :
                d > 20   ? '#FEB24C' :
                d > 10   ? '#FED976' :
                         '#FFEDA0';
       }

       function style(feature) {
          return {
             weight: 2,
             opacity: 1,
             color: 'white',
             dashArray: '3',
             fillOpacity: 0.7,
             fillColor: getColor(feature.properties.density)
          };
       }

       var geojson = L.geoJson(statesData, {
          style: style,
       }).addTo(map);


       var info = L.control();

       info.onAdd = function (map) {
           this._div = L.DomUtil.create('div', 'info'); // Cria a div com a classe "info"
           this.update();
           return this._div;
       };

       // method that we will use to update the control based on feature properties passed
       info.update = function (props) {
           this._div.innerHTML = '<h4>Brazil Votos/Região</h4>' +  (props ?
               '<b>' + props.name + '</b><br />' + props.density + ' people / mi<sup>2</sup>'
               : 'Selecione um estado');
       };

       info.addTo(map);

       legend.addTo(map);

       geojson = L.geoJson(statesData, {
          style: style,
          onEachFeature: onEachFeature
       }).addTo(map);

   :javascript
         var ctx = document.getElementById('myChart').getContext('2d');
         var total = "#{number_with_delimiter(@eleicao.resultado(@ano).qtd_comparecimento)}";

         var config =
         {
              type: 'doughnut',
              data: {
                  datasets: [{
                      data: [
                          #{@eleicao.resultado(@ano).qt_votos_nominais.to_i + @eleicao.resultado(@ano).qt_votos_legenda.to_i},
                          #{@eleicao.resultado(@ano).qt_votos_brancos},
                          #{@eleicao.resultado(@ano).qt_votos_nulos},
                      ],
                      backgroundColor: [
                          "#F7464A",
                          "#46BFBD",
                          "#FDB45C"
                      ],
                      label: 'Dataset 1'
                  }],
                  labels: [
                      "Votos Válidos",
                      "Brancos",
                      "Nulos"
                  ]
              },
              options: {
                  responsive: false,
                  legend: {
                      position: 'top',
                  },
                  title: {
                      display: true,
                      text: 'Comparecimento da eleição: '
                  },
                  animation: {
                      animateScale: true,
                      animateRotate: true
                  }
              }
          }

         var ctx = document.getElementById("myChart").getContext("2d");
          var chart = new Chart(ctx, config);
          chart.render({
              duration: 800,
              lazy: false,
              easing: 'easeOutBounce'
          });

         var tabela = $('#table_id').DataTable({
               "language": {
                  "lengthMenu": "Mostrando _MENU_ registros por pagina",
                  "zeroRecords": "Nenhum resultado encontrado",
                  "info": "Mostrando página _PAGE_ de _PAGES_",
                  "infoEmpty": "Nenhum Registro disponível",
                  "infoFiltered": "(Filtrado de _MAX_ total registros)"
              }
          } );
          var ctx = document.getElementById('myChartPartidos').getContext('2d');
          var eleicao = #{@eleicao.votos_legenda(@ano).to_json.to_s.html_safe}  ;

          votos = new Array;
          partidos = new Array;
          cores = new Array;
          eleicao.forEach(function( index )
          {
              votos.push(index.table.qtde_votos);
              partidos.push(index.table.sigla_partido);
          });

          var data = {
            datasets:[{
                  data: votos,
                  backgroundColor: ["red", "orange", "yellow", "green", "blue", "purple", "grey",
                  "red", "orange", "yellow", "green", "blue", "purple", "grey",
                  "red", "orange", "yellow", "green", "blue",],
                  label: 'Dataset 1',
            },],
            labels: partidos
          };
          var options =
          {
                  responsive: false,
                  legend: {
                      position: 'top',
                  },
                  title: {
                      display: true,
                      text: 'Votos em Partido'
                  },
                  animation: {
                      animateScale: true,
                      animateRotate: true
                  },
                  colorPool: ['red', 'green', 'orange'],
                  useRandomColors: true
          }
          var myPie =  new Chart(ctx,{
            type: 'pie',
            'data': data,
            'options': options
          })

/   %h2 detalhamento
/
/   .btn-group{:data-toggle => "buttons"}
/      %label.btn.btn-primary.active
/         %input{:name => "options", :id => "option1", :checked => "", :type => "radio"}
/            Radio 1
/      %label.btn.btn-primary
/         %input{:name => "options", :id => "option2", :type => "radio"}
/            Radio 2
/      %label.btn.btn-primary
/         %input{:name => "options", :id => "option3", :type => "radio"}
/            Radio 3
/
/   %button.btn.btn-secondary{:type => "button", :data-toggle => "tooltip", :data-placement => "top", :title => "", :data-original-title => "Tooltip on top"} Dica
/
/
/   %ol
/      %li em quem você votou? (candidato, pessoa, legenda)
/      %li Detalhamento por municipio do eleitor (mesma tabela com resultados relativos)
/      %li raio x do seu voto (detalhamento abre aba abaixo). impacto na eleição: quem ajudou a eleger?
/%div{:id =>"piechart_3d", :style =>"width: 900px; height: 500px;"}

%link{:rel => "stylesheet" , :href => "https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css"}
